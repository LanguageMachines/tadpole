Tadpole 0.2-beta

  A Tagger-Lemmatizer-Morphological-Analyzer-Dependency-Parser for Dutch
  Version  0.2-beta
  http://ilk.uvt.nl/tadpole
 
  Copyright 2006, 2007 Bertjan Busser, Antal van den Bosch, and Ko
  van der Sloot
  ILK Research Group, Faculty of Humanities, Tilburg University
  http://ilk.uvt.nl

  Tadpole is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 3 of the License, or
  (at your option) any later version.

  Tadpole is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.

  For more information and updates, see:
      http://ilk.uvt.nl/tadpole

---------------------------------------------------------------------
Preliminary note

Tadpole can be considered alpha software, and is in a fair state of flux.
Some intended functionalities are not there yet, such as a dependency
parser. These will be added very soon. Other functionalities are there, but
have not been fully tested yet, such as the multi-word chunker. More
generally, error handling and reporting is still under development.

---------------------------------------------------------------------
Installation and Quick Start

Tadpole relies on Timbl version 6.1 and Mbt version 3.1; Mbt in turn relies
on Timbl 6.1 to be installed. Tadpole will NOT work with previous versions
of Timbl and Mbt. The two software packages can be downloaded from

  http://ilk.uvt.nl/timbl
  http://ilk.uvt.nl/mbt

Please consult the installation instructions with these packages. First
install Timbl, then install Mbt.

When you have downloaded the Tadpole tarball from
http://ilk.uvt.nl/downloads/pub/software/tadpole , you can untar
the package, and go to the Tadpole directory. You may want to live
dangerously and type "make" immediately, but you might check the Makefile
first to verify that the paths to Timbl and Mbt are correct.

%prompt$> tar zxvf tadpole-0.2-beta.tar.gz
%prompt$> cd tadpole-0.2-beta
%prompt$> ./configure <...>
%prompt$> make 

This should make an executable "Tadpole" in the Tadpole src directory. Running
Tadpole without arguments provides a list of commandline options:

%prompt$> ./Tadpole
Options:
        -T <taggerconfigfile> (uses Mbt-style settings file)
        -M <MBMAconfigfile> (morphological analysis)
                 accepts:
                t <treefile>
                m <mode>
        -L <MBlemconfigfile> (lemmatizer)
                accepts:
                p <prefix> (for filenames)
                O <timbl options>
        -U <mwuconfigfile> (multiwordchunker)
                accepts:
                t <mwu unit file>
                c <connect_char> (char between tokens in a mwu)
        -t <testfile
        -s <output field separator> (default tab)
        -d <debug level> (for more verbosity)

The following command line is an example run of Tadpole on the provided
sample text file test.txt


%prompt%> ./Tadpole test.txt

This should produce output like this:

De	LID(bep,stan,rest)	de	[de]
oprichter	N(soort,ev,basis,zijd,stan)	oprichter	[op][richt][er]
van	VZ(init)	van	[van]
Wikipedia	SPEC(deeleigen)	Wikipedia	[Wikipedia]
,	LET()	,	[,]
Jimmy	SPEC(deeleigen)	Jimmy	[Jimmy]
Wales	SPEC(deeleigen)	Wales	[Wales]
,	LET()	,	[,]
wil	WW(pv,tgw,ev)	wil	[wil]
een	LID(onbep,stan,agr)	een	[een]
nieuwe	ADJ(prenom,basis,met-e,stan)	nieuw	[nieuw][e]
zoekmachine	N(soort,ev,basis,zijd,stan)	zoekmachine	[zoek][machine]
lanceren	WW(inf,vrij,zonder)	lanceren	[lanceren]
.	LET()	.	[.]

The first column contains word tokens; the second column contains the CGN
tag for each token predicted by Mbt, the memory-based tagger; the third
column contains the lemmas generated by MBLEM, the memory-based lemmatizer;
and finally, the fourth column contains a morphological segmentation of the
word token by MBMA, the memory-based morphological analyzer.


---------------------------------------------------------------------
Credits

Many thanks go out to the people who made the developments of the
Tadpole components possible: Walter Daelemans, Jakub Zavrel, Ko van
der Sloot, Sabine Buchholz, Sander Canisius, Gert Durieux, and Peter
Berck. 

Thanks to Erik Tjong Kim Sang and Lieve Macken for stress-testing the
first versions of Tadpole.


---------------------------------------------------------------------
References

Tadpole is described in a paper that is accepted for publication and
due to appear in December 2007:

Van den Bosch, A., Busser, G.J., Daelemans, W., and Canisius, S. (to
 appear). An efficient memory-based morphosyntactic tagger and parser for
 Dutch, To appear in Selected Papers of the 17th Computational Linguistics in
 the Netherlands Meeting, Leuven, Belgium.

You can find more information on components of Tadpole in these papers,
which can be downloaded from http://ilk.uvt.nl/publications :

Daelemans, W., Zavrel, J, Berck, P, and Gillis, S. (1996). MBT: A
 Memory-Based Part of Speech Tagger-Generator. In: E. Ejerhed and I. Dagan
 (eds.) Proceedings of the Fourth Workshop on Very Large Corpora, Copenhagen,
 Denmark, pp. 14-27.

Van den Bosch, A., Daelemans, W., and Weijters, A. (1996). Morphological
 analysis as classification: An inductive-learning approach. In Proceedings
 of NeMLaP-2, Bilkent University, Turkey, 79-89.

Van den Bosch, A., and Daelemans, W. (1999). Memory-based morphological
 analysis. In Proceedings of the 37th Annual Meeting of the Association for
 Computational Linguistics, ACL'99, University of Maryland, USA, June 20-26,
 1999, pp. 285-292.

Zavrel, J., and Daelemans W. (1999).  Recent Advances in Memory-Based
 Part-of-Speech Tagging. In: Actas del VI Simposio Internacional de
 Comunicacion Social, Santiago de Cuba, pp. 590-597.



